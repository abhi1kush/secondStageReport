\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][-]{section.1.1}{Motivation}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Goals}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{Contributions}{chapter.1}% 4
\BOOKMARK [2][-]{subsection.1.3.1}{Implementation Details}{section.1.3}% 5
\BOOKMARK [0][-]{chapter.2}{Related work}{}% 6
\BOOKMARK [0][-]{chapter.3}{Information Flow Analysis using Denning's Lattice Model}{}% 7
\BOOKMARK [1][-]{section.3.1}{Analysis In Local Scope}{chapter.3}% 8
\BOOKMARK [2][-]{subsection.3.1.1}{Benchmarking of Certification Script using Denning's Examples denning}{section.3.1}% 9
\BOOKMARK [1][-]{section.3.2}{Further analysis: considering global influence of while}{chapter.3}% 10
\BOOKMARK [2][-]{subsection.3.2.1}{Benchmarking of Certification Script using Denning's Examples denning}{section.3.2}% 11
\BOOKMARK [0][-]{chapter.4}{Analysis of Multi-threaded Programs}{}% 12
\BOOKMARK [1][-]{section.4.1}{Handling Information flow due to WAIT and SIGNAL operations}{chapter.4}% 13
\BOOKMARK [2][-]{subsection.4.1.1}{Benchmarking of Certification Script using Denning's Example denning}{section.4.1}% 14
\BOOKMARK [0][-]{chapter.5}{ Category 1 constraint Generator : PC reset and fixed labels.}{}% 15
\BOOKMARK [1][-]{section.5.1}{Working}{chapter.5}% 16
\BOOKMARK [1][-]{section.5.2}{Constraint Rules}{chapter.5}% 17
\BOOKMARK [1][-]{section.5.3}{Key Idea}{chapter.5}% 18
\BOOKMARK [1][-]{section.5.4}{Limitations}{chapter.5}% 19
\BOOKMARK [0][-]{chapter.6}{Category 2 constraints : PC monotonic and fixed labels.}{}% 20
\BOOKMARK [1][-]{section.6.1}{Working}{chapter.6}% 21
\BOOKMARK [1][-]{section.6.2}{Key Idea}{chapter.6}% 22
\BOOKMARK [1][-]{section.6.3}{Limitations}{chapter.6}% 23
\BOOKMARK [0][-]{chapter.7}{Category 3 constraints : PC reset and dynamic labels.}{}% 24
\BOOKMARK [1][-]{section.7.1}{Constraint Rules}{chapter.7}% 25
\BOOKMARK [1][-]{section.7.2}{Key Idea}{chapter.7}% 26
\BOOKMARK [1][-]{section.7.3}{Limitations}{chapter.7}% 27
\BOOKMARK [0][-]{chapter.8}{Category 4 constraints: PC monotonic and dynamic label.}{}% 28
\BOOKMARK [1][-]{section.8.1}{Key Idea}{chapter.8}% 29
\BOOKMARK [1][-]{section.8.2}{Limitations}{chapter.8}% 30
\BOOKMARK [0][-]{chapter.9}{Comparison among all categories of constraints.}{}% 31
\BOOKMARK [0][-]{chapter.10}{Constraint Verification with RWFM Labels}{}% 32
\BOOKMARK [1][-]{section.10.1}{RWFM label rwfm}{chapter.10}% 33
\BOOKMARK [2][-]{subsection.10.1.1}{Secure Information Flow}{section.10.1}% 34
\BOOKMARK [2][-]{subsection.10.1.2}{Definition of Join and Meet operations rwfm}{section.10.1}% 35
\BOOKMARK [2][-]{subsection.10.1.3}{Create, Read and Write operations on objects with RWFM label rwfm}{section.10.1}% 36
\BOOKMARK [1][-]{section.10.2}{Constraint Verification}{chapter.10}% 37
\BOOKMARK [0][-]{chapter.11}{Conclusion \046 Future work}{}% 38
\BOOKMARK [0][-]{chapter.12}{Python Syntax}{}% 39
\BOOKMARK [0][-]{section*.17}{Appendices}{}% 40
\BOOKMARK [0][-]{Appendix.1.A}{Python Script category 1: Constraint Generator}{}% 41
\BOOKMARK [0][-]{Appendix.1.B}{Python Script category 2: Constraint Generator}{}% 42
\BOOKMARK [0][-]{Appendix.1.C}{Python Script category 3: Constraint Generator}{}% 43
\BOOKMARK [0][-]{Appendix.1.D}{Python Script category 4: Constraint Generator}{}% 44
\BOOKMARK [0][-]{Appendix.1.E}{Python Script 2: Constraint Checker}{}% 45
\BOOKMARK [0][-]{Appendix.1.F}{Copy Programs}{}% 46
